var port           =         8002;
var express        =         require("express");
var bodyParser     =         require("body-parser");
var connect = require('connect');
var app            =         express();
var mongoose       =         require('mongoose');
var fs = require('fs');



var nodemailer = require("nodemailer");

mongoose.connect('mongodb://localhost/washingadda');


// Configuration
app.use(express.static(__dirname + '/public'));
app.use(connect.cookieParser());
app.use(connect.logger('dev'));
app.use(connect.bodyParser());

app.use(connect.json());  
app.use(connect.urlencoded());

// Routes

//require('./routes/routes.js')(app);


var User = new mongoose.Schema({
	username   : String,
	email      : String,
	phoneno    : String,
	password   : String,
  	verificationCode :String
});

var Address = new mongoose.Schema({
  email      : String,
  phoneno    : String,
  address    : String,
  pincode    : String,
  landmark   : String,
  city       : String,
  defaultAddress : String, 
});

var user = mongoose.model('user', User);

var saveAddress = mongoose.model('address', Address);

app.use(bodyParser.urlencoded({ extended: false }));
app.get('/',function(req,res){
  res.sendFile(__dirname +'/index.html');
  //res.sendStatus(404);
});

var smtpTransport = nodemailer.createTransport("SMTP",{
service: "Gmail",
auth: {
user: "orders@idealadda.com",
pass: "bintu.sugun.123&"
}
});

///////////////////////////////////////////////////// Registration and Login Routes Starts /////////////////////////////////////////////
app.post('/register',function(req,res){
  console.log("register");
  var username=req.body.username;
  var email=req.body.email;
  var phoneno=req.body.phoneno;
  var password=req.body.password;
  user.find({$and:[{email:email},{phoneno:phoneno}]},function(err,doc){
    if(err){
      console.log('error');
    }else{
      if(doc.length===0){
        console.log('Adding new user');
        new user({
          username          : username,
          email             : email,
          phoneno           : phoneno,
	  password          : password,
          verificationCode  : ''
        }).save(function(err, doc){
          if(err) console.log('error');
          else    res.json({"doc":"valid"});
        });
      }else{
        console.log('already exist');
        res.json({"doc":"already exist"});
      }
    }
  });
  
});
app.post('/login',function(req,res){
  var email=req.body.email;
  var password=req.body.password;

  user.find({ $and: [ { email: email }, { password: password } ] },
	function(err,doc) {
  		if (err) throw err;

  		else{
			if(doc.length===0){
        console.log('invalid user');
				res.json({"msg":"invalid"})
			}
			if(doc.length===1){
        user.update({email:email},
        {
          $set: {
           verificationCode : ''
          }
        },function(err,doc){
          if(err){
            console.log('error');
          }else{
          }
        });
        console.log('valid user');
				res.json({"msg":"valid"})
			}
		}
  		  
	});

});
app.post('/FetchAccount',function(req,res){
  var email=req.body.email;
  user.find({ email: email },
  function(err,doc) {
      if (err) throw err;

      else{
      if(doc.length===0){
        console.log('invalid user');
        res.json({"msg":"invalid"});
      }
      if(doc.length===1){
        console.log(doc);
        saveAddress.find({ $and: [ { email: email }, { defaultAddress: "true" } ] },
        function(err,defaultAddress) {
            if (err) throw err;
      
            else{
            if(doc.length===0){
              console.log('invalid user');
              res.json({"msg":"invalid"});
            }
            if(doc.length===1){
              console.log(doc);
              res.json({"doc":doc,"defaultAddress":defaultAddress});
            }
          }
              
        });
        //res.json({"doc":doc})
      }
    }
        
  });

});

app.post('/saveAddress',function(req,res){
  console.log("saveAddress");
  var email=req.body.email;
  var phoneno=req.body.phoneno;
  var address=req.body.address;
  var pincode=req.body.pincode;
  var landmark=req.body.landmark;
  var city=req.body.city;
  var defaultAddress=req.body.defaultAddress;
  saveAddress.find({email:email},function(err, doc) {
      if(err){
        
      }else{
        if(doc.length===0){
            new saveAddress({
              email             : email,
              phoneno           : phoneno,
              address           : address,
              pincode           : pincode,
              landmark          : landmark,
              city              : city,
              defaultAddress    : "true"
            }).save(function(err, doc){
              if(err) console.log('error');
              else    res.json({"doc":doc});
            });
        }else{
          if(defaultAddress==="true"){
            saveAddress.update({email:email},
                {
                  $set: {
                   defaultAddress : "false"
                  }
                },{ multi: true },function(err,doc){
                  if(err){
                    console.log('error');
                  }else{
                    console.log('done');
                    new saveAddress({
                      email             : email,
                      phoneno           : phoneno,
                      address           : address,
                      pincode           : pincode,
                      landmark          : landmark,
                      city              : city,
                      defaultAddress    : defaultAddress
                    }).save(function(err, doc){
                      if(err) console.log('error');
                      else    res.json({"doc":doc});
                    });
                  }
            });
          }else{
            new saveAddress({
              email             : email,
              phoneno           : phoneno,
              address           : address,
              pincode           : pincode,
              landmark          : landmark,
              city              : city,
              defaultAddress    : defaultAddress
            }).save(function(err, doc){
              if(err) console.log('error');
              else    res.json({"doc":doc});
            });
          }
        }
      }
  });
  
  console.log("pincode>>>>>>"+address);
  console.log('Adding new ADDRESS');
});

app.listen(8002, function(){
  //var addr = app.address();
  console.log("Chat server listening at, 8002");
});
